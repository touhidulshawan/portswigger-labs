* TODO SQL Injection [11/18]
1. [X]  [[./lab01.org][SQL injection vulnerability in WHERE clause allowing retrieval of hidden data]]
2. [X] [[./lab02.org][SQL injection vulnerability allowing login bypass]]
3. [X] [[./lab03.org][SQL injection UNION attack, determining the number of columns returned by the query]]
4. [X] [[./lab04.org][SQL injection UNION attack, finding a column containing text]]
5. [X] [[./lab05.org][SQL injection UNION attack, retrieving data from other tables]]
6. [X] [[./lab06.org][SQL injection UNION attack, retrieving multiple values in a single column]]
7. [X] [[./lab07.org][SQL injection attack, querying the database type and version on Oracle]]
8. [X] [[./lab08.org][SQL injection attack, querying the database type and version on MySQL and Microsoft]]
9. [X] [[./lab09.org][SQL injection attack, listing the database contents on non-Oracle databases]]
10. [X] [[./lab10.org][SQL injection attack, listing the database contents on Oracle]]
11. [X] [[./lab11.org][Blind SQL injection with conditional responses]]
12. [ ] [[./lab12.org][Blind SQL injection with conditional errors]]
13. [ ] [[./lab13.org][Visible error-based SQL injection]]
14. [ ] [[./lab14.org][Blind SQL injection with time delays]]
15. [ ] [[./lab15.org][Blind SQL injection with time delays and information retrieval]]
16. [ ] [[./lab16.org][Blind SQL injection with out-of-band interaction]]
17. [ ] [[./lab17.org][Blind SQL injection with out-of-band data exfiltration]]
18. [ ] [[./lab18.org][SQL injection with filter bypass via XML encoding]]

/Note: I am not ready to learn blind sql injection attack yet. so from lab no 12 to 18 will be solved later/

** Task
- [ ] Learn Blind SQL injectin attack in depth
- [ ] Solve Lab 12 - 18
